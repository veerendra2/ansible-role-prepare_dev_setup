---
- name: Fetch package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Merge desktop packages list
  ansible.builtin.set_fact:
    cli: "{{ cli | ansible.builtin.combine(desktop, list_merge='append',
      recursive=true) }}"
  when: "'ubuntu-desktop' in ansible_facts.packages"

- name: Install packages
  become: true
  block:
    - name: Add ppa repo keys
      ansible.builtin.apt_key:
        url: "{{ item }}"
        state: present
      loop: "{{ cli.ppa_keys }}"
      when: cli.ppa_keys

    - name: Add ppa
      ansible.builtin.apt_repository:
        repo: "{{ item }}"
        state: present
        update_cache: false
      loop: "{{ cli.ppas }}"
      when: cli.ppas

    - name: Install protonvpn deb package
      ansible.builtin.apt:
        deb: "{{ protonvpn_deb_pkg_link }}"
      when: "'ubuntu-desktop' in ansible_facts.packages"

    - name: Run update
      ansible.builtin.apt:
        upgrade: true
        update_cache: true
        cache_valid_time: 86400

    - name: Install packages
      ansible.builtin.apt:
        name: "{{ cli.pkgs }}"
        state: latest
        update_cache: true
        install_recommends: false
        force_apt_get: true

    - name: Install snap packages
      community.general.snap:
        name: "{{ item.key }}"
        classic: "{{ item.value.classic }}"
      loop: "{{ lookup('dict', cli.snap_pkgs) }}"
      loop_control:
        label: "{{ item.key }}"

    - name: Run autoremove
      ansible.builtin.apt:
        autoremove: true

- name: Check nvidia pci
  ansible.builtin.shell: |
    lspci | grep -i --color 'vga\|3d\|2d' | grep -i NVIDIA
  register: output
  changed_when: false
  ignore_errors: true

- name: Install nvidia drivers block
  when: output.rc == 0
  become: true
  block:
    - name: Display nvidia pci output
      ansible.builtin.debug:
        msg: "{{ output.stdout }}"

    - name: Include gpu utils tasks
      ansible.builtin.include_tasks: gpu-utils.yml

- name: Change ubuntu gnome app icon location
  ansible.builtin.shell: |
    gsettings set org.gnome.shell.extensions.dash-to-dock show-apps-at-top true
    gsettings set org.gnome.shell.extensions.dash-to-dock dock-position BOTTOM
  when: "'ubuntu-desktop' in ansible_facts.packages"
