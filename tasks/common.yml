---
- name: Set authorized keys taken from url
  ansible.posix.authorized_key:
    user: "{{ user_name }}"
    state: present
    key: "{{ public_keys_url }}"
  when: public_keys_url != ""

- name: Generate ssh key pair
  community.crypto.openssh_keypair:
    path: "{{ [user_home, '.ssh', 'id_rsa'] | path_join }}"
    force: false
    regenerate: never

- name: Add known_hosts
  ansible.builtin.known_hosts:
    name: "{{ item }}"
    state: present
    key: "{{ lookup('pipe', 'ssh-keyscan {{ item }}') }}"
    hash_host: true
  loop: "{{ known_hosts_list }}"

- name: Install pypi packages
  pip:
    name: "{{ item.name | default(item) }}"
    extra_args: "--no-cache-dir --upgrade"
    executable: pip3
  loop: "{{ pip_install_packages }}"

- name: Create projects directory
  ansible.builtin.file:
    name: "{{ user_home }}/projects"
    state: directory
    mode: 0755

- name: Setup git repositories
  when: git_projects|length > 0
  block:
    - name: Clone git repositories
      ansible.builtin.git:
        repo: "{{ item.value }}"
        dest: "{{ user_home }}/projects/{{ item.key }}"
        force: false
      loop: "{{ lookup('dict', git_projects, wantlist=True) }}"
      ignore_errors: true
      loop_control:
        label: "{{ item.key }}"

    - name: Generate vscode workspace file ~/projects/personal.code-workspace
      ansible.builtin.template:
        src: personal.code-workspace.j2
        dest: "{{ user_home }}/projects/personal.code-workspace"
        group: "{{ user_name }}"
        mode: 0640

- name: Create ~/.config/direnv/direnv.toml
  community.general.ini_file:
    path: ~/.config/direnv/direnv.toml
    section: global
    option: load_dotenv
    value: "true"
    mode: "0600"
    backup: false

- name: Check if docker is installed
  command: docker --version
  register: output
  ignore_errors: true

- name: Pull docker images
  docker_image:
    name: "{{ item }}"
    source: pull
  loop: "{{ docker_images }}"
  when: output.rc == 0

- name: Import dotfiles tasks
  ansible.builtin.import_tasks: dotfiles.yml
  when: install_dotfiles
